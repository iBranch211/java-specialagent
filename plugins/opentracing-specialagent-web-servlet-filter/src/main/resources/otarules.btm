# Copyright 2018 The OpenTracing Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# State 0 - no filter installed
# State 1 - filter installed

RULE Jetty servlet filter installation
CLASS org.eclipse.jetty.servlet.ServletContextHandler
METHOD <init>
HELPER io.opentracing.contrib.agent.OpenTracingHelper
BIND
  filter:io.opentracing.contrib.web.servlet.filter.TracingFilter =
        new io.opentracing.contrib.web.servlet.filter.TracingFilter(getTracer());
  patterns:String[] = new String[1];
AT EXIT
IF getState($0.getServletContext()) == 0
DO
  patterns[0] = "/*";
  $0.getServletContext().addFilter("tracingFilter", filter).addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class),
                  true, patterns);
  setState($0.getServletContext(), 1);
ENDRULE

RULE Tomcat servlet filter installation
CLASS org.apache.catalina.core.ApplicationContext
METHOD <init>
HELPER io.opentracing.contrib.agent.OpenTracingHelper
BIND
  filter:io.opentracing.contrib.web.servlet.filter.TracingFilter =
         new io.opentracing.contrib.web.servlet.filter.TracingFilter(getTracer());
  patterns:String[] = new String[1];
AT EXIT
IF TRUE
DO
  patterns[0] = "/*";
  $0.addFilter("tracingFilter", filter).addMappingForUrlPatterns(java.util.EnumSet.allOf(javax.servlet.DispatcherType.class),
                  true, patterns);
ENDRULE