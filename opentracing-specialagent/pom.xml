<!--
  Copyright 2018 The OpenTracing Authors
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.opentracing.contrib</groupId>
    <artifactId>java-specialagent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>opentracing-specialagent</artifactId>
  <profiles>
    <profile>
      <id>deploy</id>
      <activation>
        <property>
          <name>deploy</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.opentracing.contrib</groupId>
            <artifactId>specialagent-maven-plugin</artifactId>
            <version>${project.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>verify</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>io.opentracing.contrib</groupId>
          <artifactId>opentracing-specialagent-okhttp</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.opentracing.contrib</groupId>
          <artifactId>opentracing-specialagent-jdbc</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.opentracing.contrib</groupId>
          <artifactId>opentracing-specialagent-concurrent</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.opentracing.contrib</groupId>
          <artifactId>opentracing-specialagent-mongo-driver</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.opentracing.contrib</groupId>
          <artifactId>opentracing-specialagent-web-servlet-filter</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.opentracing.contrib</groupId>
          <artifactId>opentracing-specialagent-camel</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.opentracing.contrib</groupId>
          <artifactId>opentracing-specialagent-aws-sdk</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.opentracing.contrib</groupId>
          <artifactId>opentracing-specialagent-cassandra-driver</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.opentracing.contrib</groupId>
          <artifactId>opentracing-specialagent-jms</artifactId>
          <version>${project.version}</version>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <activation>
        <jdk>(,1.9)</jdk>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.sun</groupId>
          <artifactId>tools</artifactId>
          <version>1.6.0</version>
          <scope>system</scope>
          <systemPath>${java.home}/../lib/tools.jar</systemPath>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>io.opentracing</groupId>
      <artifactId>opentracing-mock</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-embedder</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-compat</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <artifactId>junit</artifactId>
      <groupId>junit</groupId>
      <scope>test</scope>
    </dependency>
    
    <!-- Use <optional>true</optional> instead of <scope>provided</scope>
      for OT libs so they make it into both the main and test JARs. -->
    
    <dependency>
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-specialagent-api</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.opentracing</groupId>
      <artifactId>opentracing-api</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.opentracing</groupId>
      <artifactId>opentracing-util</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.opentracing</groupId>
      <artifactId>opentracing-noop</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-tracerresolver</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy-agent</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <version>5.0.3</version>
      <optional>true</optional>
    </dependency>
    
    <!--
    <dependency>
      <!- https://github.com/opentracing-contrib/java-hazelcast ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-hazelcast</artifactId>
      <version>0.0.1</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>com.hazelcast</groupId>
          <artifactId>hazelcast</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-spring-messaging ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-spring-messaging-starter</artifactId>
      <version>0.0.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-spring-messaging</artifactId>
      <version>0.0.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-jdbi ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>jdbi-opentracing</artifactId>
      <version>0.4.1</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.jdbi</groupId>
          <artifactId>jdbi</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-vertx-web ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-vertx-web</artifactId>
      <version>0.1.0</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-auth-common</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.vertx</groupId>
          <artifactId>vertx-web</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-cdi ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-cdi</artifactId>
      <version>0.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-apache-httpclient ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-apache-httpclient</artifactId>
      <version>0.1.0</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpclient</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-hprose ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-hprose</artifactId>
      <version>1.0.0</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-thrift ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-thrift</artifactId>
      <version>0.0.7</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.thrift</groupId>
          <artifactId>libthrift</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-interceptors ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-interceptors</artifactId>
      <version>0.0.4</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.eclipse.microprofile.opentracing</groupId>
          <artifactId>microprofile-opentracing-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax</groupId>
          <artifactId>javaee-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-p6spy ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-p6spy</artifactId>
      <version>0.2.1</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>p6spy</groupId>
          <artifactId>p6spy</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-spring-cloud ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-spring-cloud-starter</artifactId>
      <version>0.1.13</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-aop</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-autoconfigure</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-jms</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-redis-client ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-redis-jedis</artifactId>
      <version>0.0.7</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>redis.clients</groupId>
          <artifactId>jedis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-spring-rabbitmq ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-spring-rabbitmq-starter</artifactId>
      <version>0.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-spring-rabbitmq</artifactId>
      <version>0.1.0</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-aop</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-jaxrs ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-jaxrs2</artifactId>
      <version>0.1.7</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.osgi</groupId>
          <artifactId>org.osgi.annotation.versioning</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.geronimo.specs</groupId>
          <artifactId>geronimo-atinject_1.0_spec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-kafka-client ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-kafka-client</artifactId>
      <version>0.0.15</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.kafka</groupId>
          <artifactId>kafka-clients</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-kafka-streams</artifactId>
      <version>0.0.15</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.kafka</groupId>
          <artifactId>kafka-streams</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-kafka-spring</artifactId>
      <version>0.0.15</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.kafka</groupId>
          <artifactId>spring-kafka</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-solr-client ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-solr-client</artifactId>
      <version>0.0.2</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.solr</groupId>
          <artifactId>solr-solrj</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-rxjava -> <!- !! ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-rxjava-1</artifactId>
      <version>0.0.9</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>io.reactivex</groupId>
          <artifactId>rxjava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-rxjava-2</artifactId>
      <version>0.0.9</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>io.reactivex.rxjava2</groupId>
          <artifactId>rxjava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-neo4j-driver ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-neo4j-driver</artifactId>
      <version>0.0.2</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.neo4j.driver</groupId>
          <artifactId>neo4j-java-driver</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-memcached-client ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-spymemcached</artifactId>
      <version>0.0.3</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>net.spy</groupId>
          <artifactId>spymemcached</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-spring-tracer-configuration ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-spring-tracer-configuration-starter</artifactId>
      <version>0.1.0</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-autoconfigure</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-elasticsearch-client -> <!- !! ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-elasticsearch5-client</artifactId>
      <version>0.0.6</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.elasticsearch.client</groupId>
          <artifactId>transport</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-elasticsearch6-client</artifactId>
      <version>0.0.6</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.elasticsearch.client</groupId>
          <artifactId>transport</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-rabbitmq-client ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-rabbitmq-client</artifactId>
      <version>0.0.6</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>com.rabbitmq</groupId>
          <artifactId>amqp-client</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-spring-web ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-spring-web-starter</artifactId>
      <version>0.3.3</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-autoconfigure</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-grpc ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-grpc</artifactId>
      <version>0.0.8</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>io.grpc</groupId>
          <artifactId>grpc-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-spring-zipkin -> <!- !! ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-spring-zipkin-web-starter</artifactId>
      <version>0.2.0</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>io.zipkin.brave</groupId>
          <artifactId>brave</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.zipkin.reporter2</groupId>
          <artifactId>zipkin-sender-okhttp3</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-spring-zipkin-cloud-starter</artifactId>
      <version>0.2.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <!- https://github.com/opentracing-contrib/java-akka ->
      <groupId>io.opentracing.contrib</groupId>
      <artifactId>opentracing-akka</artifactId>
      <version>0.0.2</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>com.typesafe.akka</groupId>
          <artifactId>akka-actor_2.12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    -->
    <!-- [start] DO NOT REMOVE OR CHANGE VERSION! USED FOR TESTING [start] -->
    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>javax.el-api</artifactId>
      <version>3.0.0</version>
      <scope>test</scope>
      <optional>true</optional>
    </dependency>
    <!-- [end] DO NOT REMOVE OR CHANGE VERSION! USED FOR TESTING [end] -->
  </dependencies>
  <build>
    <resources>
      <!-- Includes the output of the maven-dependency-plugin (ids: copy-dependencies and
        unpack-dependencies) -->
      <resource>
        <directory>${project.build.directory}/dependencies</directory>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <!-- Includes the output of the maven-dependency-plugin (id: unpack-test-dependencies) -->
      <testResource>
        <directory>${project.build.directory}/test-dependencies</directory>
      </testResource>
      <testResource>
        <!-- Include the main build output path to include the main classes and
          resources of this module -->
        <directory>${project.build.directory}/classes</directory>
        <!-- Have to exclude all JARs, because all dependencies are copied to the
          ${project.build.directory}/dependencies/META-INF/opentracing-specialagent
          path via maven-dependency-plugin (id: copy-dependencies), and the
          ${project.build.directory}/dependencies path is listed as a <resource> right
          above here, which makes the maven-resources-plugin copy them to
          ${project.build.directory}/classes. -->
        <excludes>
          <exclude>**/*.jar</exclude>
        </excludes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <!-- maven-shade-plugin cannot be used to build a JAR that requires test dependencies -->
      <!--plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <finalName>${project.artifactId}</finalName>
          <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
              <manifestEntries>
                <Main-Class>io.opentracing.contrib.specialagent.SpecialAgent</Main-Class>
                <Agent-Class>io.opentracing.contrib.specialagent.SpecialAgent</Agent-Class>
                <Premain-Class>io.opentracing.contrib.specialagent.SpecialAgent</Premain-Class>
                <Can-Redefine-Classes>true</Can-Redefine-Classes>
                <Can-Retransform-Classes>true</Can-Retransform-Classes>
              </manifestEntries>
            </transformer>
          </transformers>
        </configuration>
      </plugin-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-dependencies</id>
            <!-- Phase must be generate-resources for the maven-resources-plugin to acknowledge the
              <outputDirectory> of this execution, which is defined as a <resource> above. Specifying a
              different phase results in a JAR that does not include the dependencies generated in the
              <outputDirectory>. -->
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
          <execution>
            <id>copy-dependencies</id>
            <!-- Phase must be generate-resources for the maven-resources-plugin to acknowledge the
              <outputDirectory> of this execution, which is defined as a <resource> above. Specifying a
              different phase results in a JAR that does not include the dependencies generated in the
              <outputDirectory>. -->
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/dependencies/META-INF/opentracing-specialagent</outputDirectory>
              <includeScope>provided</includeScope>
              <excludeScope>test</excludeScope>
            </configuration>
          </execution>
          <execution>
            <id>unpack-test-dependencies</id>
            <!-- Phase must be generate-test-resources for the maven-resources-plugin to acknowledge the
              <outputDirectory> of this execution, which is defined as a <testResource> above. Specifying a
              different phase results in a JAR that does not include the dependencies generated in the
              <outputDirectory>. -->
            <phase>generate-test-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/test-dependencies</outputDirectory>
              <!--includeScope>test</includeScope--> <!-- No idea why this needs to be commented out for this to work?! -->
              <excludeScope>provided</excludeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Main-Class>io.opentracing.contrib.specialagent.SpecialAgent</Main-Class>
              <Agent-Class>io.opentracing.contrib.specialagent.SpecialAgent</Agent-Class>
              <Premain-Class>io.opentracing.contrib.specialagent.SpecialAgent</Premain-Class>
              <Boot-Class-Path>${project.artifactId}-${project.version}.jar</Boot-Class-Path>
              <Can-Redefine-Classes>true</Can-Redefine-Classes>
              <Can-Retransform-Classes>true</Can-Retransform-Classes>
            </manifestEntries>
          </archive>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <configuration>
              <archive>
                <manifestEntries>
                  <Boot-Class-Path>${project.artifactId}-${project.version}-tests.jar</Boot-Class-Path>
                </manifestEntries>
              </archive>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- maven-assembly-plugin cannot be used because its <scope>test</scope> spec does
        not exclude other scopes. It basically means: <scope>test (and runtime)</scope> -->
      <!--plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <finalName>${project.artifactId}-${project.version}</finalName>
          <attach>false</attach>
          <archive>
            <manifestEntries>
              <Main-Class>io.opentracing.contrib.specialagent.SpecialAgent</Main-Class>
              <Agent-Class>io.opentracing.contrib.specialagent.SpecialAgent</Agent-Class>
              <Premain-Class>io.opentracing.contrib.specialagent.SpecialAgent</Premain-Class>
              <Can-Redefine-Classes>true</Can-Redefine-Classes>
              <Can-Retransform-Classes>true</Can-Retransform-Classes>
            </manifestEntries>
          </archive>
          <descriptors>
            <descriptor>test-assembly.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
      </plugin>
      <!- Used to move the main assembly to be the main jar of this module. This is due to a bug in
        maven-assembly-plugin where if even if one <appendAssemblyId> of a assembly execution is false,
        the assembly content of one assembly ends up inside the other also. ->
      <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <goals>
              <goal>rename</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <sourceFile>${project.build.directory}/${project.artifactId}-${project.version}-assembly.jar</sourceFile>
              <destinationFile>${project.build.directory}/${project.artifactId}-${project.version}.jar</destinationFile>
            </configuration>
          </execution>
        </executions>
      </plugin-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
          <reuseForks>false</reuseForks>
          <!-- Have to explicitly define the path of the tests, because when the maven-dependency-plugin
            unpacks JUnit dependencies in the generate-test-resources phase, they end up being picked up
            by maven-surefire-plugin in the test phase. -->
          <includes>
            <include>io/opentracing/contrib/specialagent/**/*Test</include>
            <include>io/opentracing/contrib/specialagent/**/*TestCase</include>
          </includes>
          <excludes>
            <exclude>io/opentracing/contrib/specialagent/**/*ITest</exclude>
            <exclude>io/opentracing/contrib/specialagent/**/*ITestCase</exclude>
            <exclude>io/opentracing/contrib/specialagent/**/*IntegrationTest</exclude>
            <exclude>io/opentracing/contrib/specialagent/**/*IntegrationTestCase</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <trimStackTrace>false</trimStackTrace>
              <reuseForks>false</reuseForks>
              <includes>
                <include>io/opentracing/contrib/specialagent/**/*ITest</include>
                <include>io/opentracing/contrib/specialagent/**/*ITestCase</include>
                <include>io/opentracing/contrib/specialagent/**/*IntegrationTest</include>
                <include>io/opentracing/contrib/specialagent/**/*IntegrationTestCase</include>
              </includes>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <excludes>
            <exclude></exclude> <!-- This is necessary for inner classes to be run -->
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <skip>true</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <skip>true</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>